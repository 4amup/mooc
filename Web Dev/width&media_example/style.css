.container{
	display: block;
	border: solid pink 4px; 
}
.container>div{
	border:solid 2px black;
	display: inline-block;
}
.container div p{
	font-size: 38px;
	text-align: center;
}
.red{
	background-color: red;
}
.green{
	background-color: green;
}
.blue{
	background-color: blue;
}
.yellow{
	background-color: yellow;
}
.grey{
	background-color: grey;
}
.white{
	background-color: white;
}
.brown{
	background-color: brown;
}
/*关于min/max-width的测试*/
/*先指定一下边界样式，看的清楚点，用高级属性选择器*/
div[class*="-width"],.media,.color {
	border:solid 2px black;
	height: 100px;
	margin: 20px;
	background-color: rgba(1,1,1,.1);
	text-align: center;
}
.color {
	background-color: rgba(255,20,20,.1);
}
.min-width {
	min-width: 768px;
}
.max-width {
	max-width: 768px;
}
/*创建个媒体查询的指示*/
/*max-width的意思就是，规定的查询规则起作用的最大宽度，在最大宽度范围内就生效，超出这个范围就失效*/
/*min-width的意思就是，规定的查询规则起作用的最小宽度，比这个宽度再小，规定的规则就失效*/
@media (max-width: 768px) {
	.media{
		background-color: rgba(255,20,20,.1)
	}
}
/*flex布局模式测试*/
/*在Flex容器中，当项目边距设置为“auto”时，设置自动的垂直边距将使该项目完全集中两个轴。*/
.parent {
  display: flex;
  height: 300px; /* Or whatever */
  background-color: black;
}

.child {
  width: 100px;  /* Or whatever */
  height: 100px; /* Or whatever */
  margin: auto;  /* Magic! */
  background-color: white;
}

ul {
    margin: 0;
    padding: 0;

}

li{
    list-style: none;
}

.flex-container {
    /* We first create a flex layout context */
    display: flex;
    height: 800px;
    border: red solid 1px;
    /* Then we define the flow direction and if we allow the items to wrap 
    * Remember this is the same as:
    * flex-direction: row;
    * flex-wrap: wrap;
    */
    flex-flow: row wrap;
    /* Then we define how is distributed the remaining space */
    justify-content: space-around;
    /*align-content: space-between;*/
}
.flex-item {
    background: tomato;
    padding: 5px;
    width: 200px;
    height: 150px;
    margin: 10px;

    line-height: 150px;
    color: white;
    font-weight: bold;
    font-size: 3em;
    text-align: center;
}